#ifndef _LINKLIST_H_
#define _LINKLIST_H_
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef int ElemType;		//元素类型

//单项带头链表结构
typedef struct _LinkNode
{
	ElemType data;			//数据
	struct LinkList* next;	//后继节点
}LinkNode,*PLinkNode;


/*=======================================================
*	@函数功能：创建头节点
*	@函数参数：无
*	@函数返回：成功返回PLinkList头节点，失败返回NULL
*=======================================================*/
PLinkNode InitHeadNode();



/*=======================================================
*	@函数功能：链表尾插入节点
*	@函数参数：LinkNode* , data
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int InsertLinkNode(LinkNode* pHead, ElemType data);



/*=======================================================
*	@函数功能：链表头插入节点
*	@函数参数：LinkNode* , data
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int InsertNodeToHead(LinkNode* pHead, ElemType data);



/*=======================================================
*	@函数功能：链表指定位置插入节点
*	@函数参数：LinkNode* , pos , data
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int PosInsertToNode(LinkNode* pHead, int pos, ElemType data);



/*=======================================================
*	@函数功能：链表尾删除节点
*	@函数参数：LinkNode*
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int DeleteNode(LinkNode* pHead);



/*=======================================================
*	@函数功能：链表头删除节点
*	@函数参数：LinkNode*
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int HeadDeleteToNode(LinkNode* pHead);



/*=======================================================
*	@函数功能：删除指定位置节点
*	@函数参数：LinkNode* , pos
*	@函数返回：成功返回0 ,失败返回-1
*=======================================================*/
int PosDeleteToNode(LinkNode* pHead, int pos);



/*=======================================================
*	@函数功能：获取指定位置节点值
*	@函数参数：LinkNode* , pos
*	@函数返回：成功返回该值，失败返回-1
*=======================================================*/
int GetNodePosValue(LinkNode* pHead, int pos);



/*=======================================================
*	@函数功能：获取链表长度
*	@函数参数：SqList*
*	@函数返回：成功返回线性表长度，失败返回-1
*=======================================================*/
int GetLinkListLen(LinkNode* pHead);



/*=======================================================
*	@函数功能：遍历链表
*	@函数参数：LinkNode*
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int PrintLinkList(LinkNode* pHead);



/*=======================================================
*	@函数功能：清空链表
*	@函数参数：LinkNode*
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int ClearLinkList(LinkNode* pHead);



/*=======================================================
*	@函数功能：释放链表空间
*	@函数参数：LinkNode**
*	@函数返回：成功返回0，失败返回-1
*=======================================================*/
int FreeHeadNode(LinkNode** pHead);


#endif
